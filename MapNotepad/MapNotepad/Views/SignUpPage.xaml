<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:MapNotepad.Controls"
             xmlns:behaviors="clr-namespace:MapNotepad.Behaviors"
             x:Name="signUpPage"
             x:Class="MapNotepad.Views.SignUpPage"
             Title="{Binding Resources[SignUpPageTitle]}">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">

            <Grid.RowDefinitions>
                <RowDefinition Height="95"/>
                <RowDefinition Height="95"/>
                <RowDefinition Height="95"/>
                <RowDefinition Height="95"/>
            </Grid.RowDefinitions>
            
            <!--EMAIL ENTRY-->

            <controls:CustomEntryControl x:Name="emailEntry" 
                                         Grid.Row="0"
                                         FieldLabel="{Binding BindingContext.Resources[EmailLabel], Source={x:Reference signUpPage}}" 
                                         Placeholder="{Binding BindingContext.Resources[EmailPlaceholder], Source={x:Reference signUpPage}}"
                                         Text="{Binding BindingContext.Email, Source={x:Reference signUpPage}}"
                                         Style="{StaticResource CustomEntryControlStyle}">

                <controls:CustomEntryControl.Behaviors>

                    <behaviors:ValidationBehavior x:Name="emailValidation"
                                                  ValidationType="Email"
                                                  Message="{Binding BindingContext.Resources[EmailNotValidMessage], Source={x:Reference signUpPage}}"/>

                </controls:CustomEntryControl.Behaviors>

            </controls:CustomEntryControl>
            
            <!--NAME ENTRY-->

            <controls:CustomEntryControl Grid.Row="1"
                                         FieldLabel="{Binding BindingContext.Resources[NameLabel], Source={x:Reference signUpPage}}" 
                                         Placeholder="{Binding BindingContext.Resources[NamePlaceholder], Source={x:Reference signUpPage}}"
                                         Text="{Binding BindingContext.Name, Source={x:Reference signUpPage}}"
                                         Style="{StaticResource CustomEntryControlStyle}">

            </controls:CustomEntryControl>
            
            <!--PASSWORD ENTRY-->

            <controls:CustomEntryControl x:Name="passwordEntry"  
                                         Grid.Row="2"
                                         FieldLabel="{Binding BindingContext.Resources[PasswordLabel], Source={x:Reference signUpPage}}"
                                         Placeholder="{Binding BindingContext.Resources[PasswordPlaceholder], Source={x:Reference signUpPage}}"
                                         IsPassword="True"
                                         Text="{Binding BindingContext.Password, Source={x:Reference signUpPage}}"
                                         Style="{StaticResource CustomEntryControlStyle}">

                <controls:CustomEntryControl.Behaviors>

                    <behaviors:ValidationBehavior x:Name="passwordValidation"
                                                  IsPassword="True"
                                                  PasswordMinimumLength="8"
                                                  ValidationType="Password"
                                                  Message="{Binding BindingContext.Resources[PasswordNotValidMessage], Source={x:Reference signUpPage}}"
                                                  SecondMessage="{Binding BindingContext.Resources[PasswordNotValidSecondMessage], Source={x:Reference signUpPage}}"/>

                </controls:CustomEntryControl.Behaviors>

            </controls:CustomEntryControl>
            
            <!--CONFIRM PASSWORD BUTTON-->

            <controls:CustomEntryControl x:Name="confirmPasswordEntry" 
                                         Grid.Row="3"
                                         FieldLabel="{Binding BindingContext.Resources[ConfirmPasswordLabel], Source={x:Reference signUpPage}}"
                                         Placeholder="{Binding BindingContext.Resources[PasswordPlaceholder], Source={x:Reference signUpPage}}"
                                         IsPassword="True"
                                         Text="{Binding BindingContext.ConfirmPassword, Source={x:Reference signUpPage}}"
                                         Style="{StaticResource CustomEntryControlStyle}">

                <controls:CustomEntryControl.Behaviors>

                    <behaviors:ValidationBehavior x:Name="confirmPasswordValidation"
                                                  IsPassword="True"
                                                  MatchWith="{Binding Text, Source={x:Reference passwordEntry}}"
                                                  Message="{Binding BindingContext.Resources[PasswordsNotMatchMessage], Source={x:Reference signUpPage}}"/>

                </controls:CustomEntryControl.Behaviors>

            </controls:CustomEntryControl>

        </Grid>

        <!--SIGN UP BUTTON-->
        
        <Button Grid.Row="3"
                Text="{Binding Resources[SignUpButton]}"
                Style="{StaticResource SignButtonStyle}"
                Command="{Binding SignUpCommand}"
                IsEnabled="{Binding IsSignUpEnabled}">

            <Button.Triggers>

                <MultiTrigger TargetType="Button">

                    <MultiTrigger.Conditions>

                        <BindingCondition Binding="{Binding Source={x:Reference emailValidation}, Path=IsValid}"
                                          Value="True"/>

                        <BindingCondition Binding="{Binding Source={x:Reference passwordValidation}, Path=IsValid}"
                                          Value="True"/>

                        <BindingCondition Binding="{Binding Source={x:Reference confirmPasswordValidation}, Path=IsValid}"
                                          Value="True"/>

                    </MultiTrigger.Conditions>

                    <Setter Property="IsEnabled" Value="True"/>

                </MultiTrigger>

            </Button.Triggers>

        </Button>

    </Grid>

</ContentPage>